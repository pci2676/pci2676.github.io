studies:
  - subject: Clean Code Study
    host: Java Bom
    time: 2019.02 ~ Present
    details: |
      - <a href="https://javabom.tistory.com/">운영중인 스터디 기술 블로그</a>
      - 객체지향언어인 Java를 올바르게 사용하기 위해 시작한 스터디
        - 관련 토이 프로젝트
          - <a href="https://github.com/Java-Bom/calculator">문자열 계산기</a>
          - <a href="https://github.com/Java-Bom/racing-game">자동차 게임</a>
          - <a href="https://github.com/Java-Bom/base-ball">숫자 야구 게임</a>
          - <a href="https://github.com/Java-Bom/lotto">로또 게임</a>
          - <a href="https://github.com/Java-Bom/ladder-game">사다리 게임</a>
      - 소트웍스 앤솔러지에서 발췌한 객체지향 생활체조 9가지 규칙을 지키며 코드 작성
      - TDD로 Java 애플리케이션(자동차게임, 로또, 사다리 게임)을 작성하여 좋은 설계를 하기 위한 학습을 진행
      - Spring boot을 이용한 웹 어플리케이션을 구현하며 MVC 레이어별 테스트 작성법에 대한 학습
        - 관련 토이 프로젝트
          - <a href="https://github.com/Java-Bom/java-qna">질의 응답 게시판</a>
          - <a href="https://github.com/Java-Bom/cafe">카페 POS</a>
      - 객체지향의 사실과 오해, Effective Java를 읽으며 더 좋은 코드를 작성하기 위해 노력
        - Github <a href="https://github.com/Java-Bom/ReadingRecord">repository</a>/<a href="https://github.com/Java-Bom/ReadingRecord/issues">issue</a>를 통해 책을 통해 배운 내용을 정리중
      - Github PR을 이용한 온라인 코드리뷰 진행

  - subject: 우아한 테크코스 백엔드
    host: 우아한 테크코스
    time: 2020-02 ~ 2020-11
    details: |
      - Java 레벨 1 (2020-02-04 ~ 2020-04-03)
        - 자바 프로그래밍 언어에 대한 기본 문법을 익혀 프로그래밍하는 경험을 한다.
          - 읽기 좋은 코드를 구현하는 것이 왜 중요한지와 코드를 개선해 읽기 좋은 코드로 변경해 보는 경험을 한다.
          - 자신이 구현한 코드에 대해 단위 테스트와 리팩토링하는 경험을 한다.
          - 웹 프론트엔드에서 웹 백엔드까지 프로그래밍해 웹 애플리케이션을 개발하는 경험을 한다.
      - Java 레벨 2 (2020-04-21 ~ 2020-06-12)
        - 웹 프로그래밍
          - Spring 프레임워크 기반으로 웹 애플리케이션을 개발하는 경험을 한다.
          - TDD, ATDD 기반으로 웹 애플리케이션을 개발하고 리팩토링하는 경험을 한다.
          - 구현한 프로그램을 서버에 배포하는 경험을 한다.
      - Java 레벨 3 (2020-07-07 ~ 2020-08-28)
        - 팀 프로젝트
          - 팀 프로젝트를 통해 팀원간의 소통, 협업, 회고 경험을 한다.
          - 일반 사용자가 사용할 수 있는 성격의 프로젝트를 만든다.
          - 굴러가는 자동차의 바퀴를 교체하는 경험을 한다.
      - Java 레벨 4 (2020-09-08 ~ 2020-11-04)
        - 웹 서버를 직접 만들어보는 경험을 통해 HTTP에 대한 이해도를 높인다.
        - 레거시 코드를 리팩토링하는 경험을 한다.
        - 대용량 데이터에 처리에 대한 역량을 쌓는다.
        - 성능을 고려해 시스템을 설계하고,구축하는 경험을 한다.

  - subject: TDD, Refactoring, Clean Code 6기
    host: NEXTSTEP
    time: 2019.10 ~ 2019.11
    details: |
      - 유지보수하기 좋은코드
        - 프로그래머 작업 중 가장 많은 시간을 투자하는 일이 유지보수이다.<br>
          유지보수하기 좋은 코드를 구현하는 것은 서비스의 성패를 좌우하는 중요한 요소이다.<br>
          유지보수하기 좋은 코드를 구현하는 핵심은 클린 코드 구현에 있다.<br>
      - 변화에 대응하는 핵심 능력
        - 운영 중 필연적으로 발생하기 마련인 기능<br>
          추가, 버그 수정, 레거시 코드 리뷰 및 수정 작업과 같은 변화 자체에 확장성있게 대응하려면<br>
          클린 코드에 대한 이해와 작성 능력이 필수. 변화를 피할 수 없으면 제대로 대응하자.<br>
      - 프로젝트 협업 능력 향상
        - 읽기 좋은 클린 코드를 작성함으로서 오는 장점은 개인에게만 있지 않다.<br>
          특히 1인 개발이 아닌, 여러 개발자가 함께 참여하는 프로젝트일수록<br>
          확장성 있는 코드 작성 능력을 가진 개발자의 기여도는 높을 수 밖에 없다.<br>
